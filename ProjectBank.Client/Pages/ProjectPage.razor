@page "/index"
@page "/index/{Id:int}"
@inject HttpClient _http
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin, Supervisor, Student")]

<PageTitle>Project Page</PageTitle>
<div class="projectContainer">
    @if ( _response == null)
    {
        <h1>Loading... </h1>
    }
    else if ( _response.StatusCode.ToString().ToLower() == "notfound" )
    {
        <h1>404 Not Found</h1>
    }
    else if ( _project != null )
    {

        <h1>@_project.Name</h1>
        <div>
            <h2>Description</h2>
            <p>@_project.Description</p>
        </div>
        <div>
            <h2>Supervisors</h2>
            @if (_project.Supervisors.Any())
            {
                <p>@string.Join(", ", _project.Supervisors.Select(s => s.Name))</p>
            }
            else
            {
                <h3>No supervisor associated to this project</h3>
            }
        </div>
        <div>
            <h2>Tags</h2>
            @if (_project.Tags.Any())
            {
                <p>@string.Join(", ", _project.Tags.Select((t => t.Value)))</p>
            }
            else
            {
                <h3>No tags in this project</h3>
            }
        </div>
    }
</div>
@code {

    private ProjectDTO? _project;
    private HttpResponseMessage? _response;

    
    [Parameter]
    public int Id { get; set; }
    
    protected override async Task OnParametersSetAsync()
    {
        _response = await _http.GetAsync($"api/Project/{Id}");
        Console.WriteLine("Json is: " + await _response.Content.ReadAsStringAsync());
        _project = await _response.Content.ReadFromJsonAsync<ProjectDTO>();
    }
}