@page "/createTagGroup"
@inject HttpClient _http
@inject NavigationManager _navigationManager
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Create Tag Group</PageTitle>

<h1 style="margin-bottom: 48px">Create Tag Group</h1>

<div class="row">
    <div class="col-xl-6">
        <div class="row">
            <div class="col">
                <RadzenTemplateForm id="@submitFormId" TItem="TagGroupCreateDTO" Data="@_tagGroup" Submit="@OnSubmit">
                    <div class="row" style="margin-bottom: 48px">
                        <div class="col-md-4 align-right">
                            <RadzenLabel class="formLabelText" Text="Name"/>
                        </div>
                        <div class="col">
                            <RadzenTextBox class="tagGroupName" style="display: block; width: 100%" Name="TagGroupName" @bind-Value=@_tagGroup.Name />
                            <RadzenRequiredValidator Component="TagGroupName" Text="Tag group name is required"/>
                        </div>
                    </div>
                    <div class="row requiredInProject" style="margin-bottom: 48px">
                        <div class="col-md-4">
                            <RadzenLabel class="formLabelText" Text="Tag Group Required"/>
                        </div>
                        <div class="col">
                            <RadzenCheckBox @bind-Value=@_tagGroup.RequiredInProject Name="RequiredInProject" TValue="bool"/>
                        </div>
                    </div>
                    <div class="row supervisorAddTags" style="margin-bottom: 48px">
                        <div class="col-md-4">
                            <RadzenLabel class="formLabelText" Text="Supervisors Can Add Tags"/>
                        </div>
                        <div class="col">
                            <RadzenCheckBox @bind-Value=@_tagGroup.SupervisorCanAddTag Name="SupervisorCanAdd" TValue="bool"/>
                        </div>
                    </div>
                    <div class="row supervisorTagsLimit" style="margin-bottom: 48px">
                        <div class="col-md-4">
                            <RadzenLabel class="formLabelText" Text="Maximum Amount of Tags"/>
                        </div>
                        <div class="col">
                            <RadzenNumeric @bind-Value=@_tagGroup.TagLimit TValue="int?" Placeholder="No Limit" Min="1"/>
                        </div>
                    </div>
                </RadzenTemplateForm>
                <div class="row" style="margin-bottom: 48px">
                    <div class="col-md-4">
                        <RadzenLabel class="formLabelText" Text="Predefined Tags"/>
                    </div>
                    <div class="col">
                        <Autocomplete class="autocompleteTags autoCompleteCreateTg"
                                      TItem="TagCreateDTO"
                                      TValue="string"
                                      Data="@_tagGroup.NewTagsDTOs"
                                      TextField="@((item) => item.Value)"
                                      ValueField="@((item) => item.Value)"
                                      Placeholder="Search or press enter to create new..."
                                      Multiple
                                      FreeTyping
                                      @bind-SelectedValues="_multipleSelectionTagsData"
                                      @bind-SelectedTexts="_multipleSelectionTagsTexts">
                        </Autocomplete>
                    </div>
                </div>
                <div class="row lowerSubmitCancelButtons">
                    <div class="col-md-4"></div>
                    <div class="col">
                        <RadzenButton class="submitButton" form="@submitFormId" ButtonType="Radzen.ButtonType.Submit" Text="Submit"></RadzenButton>
                        <RadzenButton class="cancelButton" Click="@Redirect" Text="Cancel" ButtonStyle="ButtonStyle.Light"/>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string submitFormId = "submitForm";
    TagGroupCreateDTO _tagGroup = new();
    List<String> _multipleSelectionTagsData; // TODO: for update – might need ID instead of value. 
    List<String> _multipleSelectionTagsTexts = new List<string>();

    protected override async Task OnInitializedAsync() // TODO: For the update page – here we need to read in the existing tags for the current tag group – so we need to get the tag group ID somehow
    {
        _multipleSelectionTagsData = new List<string>();
        await base.OnInitializedAsync();
    }

    async Task OnSubmit(TagGroupCreateDTO tagGroup)
    {
        CreateTags();

        var response = await _http.PostAsJsonAsync("api/TagGroup", _tagGroup);

        if (response.IsSuccessStatusCode)
        {
            Redirect();
        }
    }

    void CreateTags()
    {
        if (_multipleSelectionTagsTexts.Count > 0)
            _tagGroup.NewTagsDTOs = _multipleSelectionTagsTexts.Select(tag => new TagCreateDTO() {Value = tag}).ToHashSet();
    }

    void Redirect()
    {
        var uri = $"{_navigationManager.BaseUri}manageTagGroups";
        _navigationManager.NavigateTo(uri);
    }

}