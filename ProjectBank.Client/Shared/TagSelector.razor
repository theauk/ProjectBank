<Autocomplete TItem="Tag"
              TValue="string"
              Data="@Tags"
              TextField="@(( item ) => item.Name)"
              ValueField="@(( item ) => item.Id.ToString())"
              Placeholder="Search..."
              Multiple
              FreeTyping
              @bind-SelectedValues="multipleSelectionData"
              @bind-SelectedTexts="multipleSelectionTexts">
</Autocomplete>

<Field Horizontal="true">
    <FieldBody ColumnSize="ColumnSize.Is12">
        Selected Values: @string.Join(',', multipleSelectionData)
    </FieldBody>
    <FieldBody ColumnSize="ColumnSize.Is12">
        Selected Texts: @string.Join(',', multipleSelectionTexts)
    </FieldBody>
</Field>

@code {

    public IEnumerable<Tag> Tags = new List<Tag>();
    List<string> multipleSelectionData;
    List<string> multipleSelectionTexts = new();
    
    protected override async Task OnInitializedAsync()
    {
        var t1 = new Tag
        {
            Name = "Machine Learning",
            Id = 1
        };
        var t2 = new Tag
        {
            Name = "Algorithms",
            Id = 2
        };
        var t3 = new Tag
        {
            Name = "C#",
            Id = 3
        };

        Tags = Tags.Append(t1);
        Tags = Tags.Append(t2);
        Tags = Tags.Append(t3);
        
        multipleSelectionData = new List<string>() { Tags.ElementAt( 1 ).Id.ToString(), Tags.ElementAt( 2 ).Id.ToString() };
        await base.OnInitializedAsync();
    }

}